{"version":3,"sources":["../src/m-sequence.js"],"names":[],"mappings":";;;;;;AAAA;;;;;;;;;;;;;AAGA,IAAM,cAAc,CAClB,IADkB,EAElB,CAAC,CAAD,CAFkB,EAGlB,CAAC,CAAD,EAAI,CAAJ,CAHkB,EAIlB,CAAC,CAAD,EAAI,CAAJ,CAJkB,EAKlB,CAAC,CAAD,EAAI,CAAJ,CALkB,EAMlB,CAAC,CAAD,EAAI,CAAJ,CANkB,EAOlB,CAAC,CAAD,EAAI,CAAJ,CAPkB,EAQlB,CAAC,CAAD,EAAI,CAAJ,CARkB,EASlB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CATkB,EAUlB,CAAC,CAAD,EAAI,CAAJ,CAVkB,EAWlB,CAAC,EAAD,EAAK,CAAL,CAXkB,E;AAYlB,CAAC,EAAD,EAAK,CAAL,CAZkB,EAalB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,CAAb,CAbkB,EAclB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,CAAb,CAdkB,EAelB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,CAAb,CAfkB,EAgBlB,CAAC,EAAD,EAAK,EAAL,CAhBkB,EAiBlB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,CAAb,CAjBkB,EAkBlB,CAAC,EAAD,EAAK,EAAL,CAlBkB,EAmBlB,CAAC,EAAD,EAAK,EAAL,CAnBkB,EAoBlB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CApBkB,EAqBlB,CAAC,EAAD,EAAK,EAAL,CArBkB,E;AAsBlB,CAAC,EAAD,EAAK,EAAL,CAtBkB,EAuBlB,CAAC,EAAD,EAAK,EAAL,CAvBkB,EAwBlB,CAAC,EAAD,EAAK,EAAL,CAxBkB,EAyBlB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAzBkB,EA0BlB,CAAC,EAAD,EAAK,EAAL,CA1BkB,EA2BlB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CA3BkB,EA4BlB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CA5BkB,EA6BlB,CAAC,EAAD,EAAK,EAAL,CA7BkB,EA8BlB,CAAC,EAAD,EAAK,EAAL,CA9BkB,EA+BlB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,CAAb,CA/BkB,E;AAgClB,CAAC,EAAD,EAAK,EAAL,CAhCkB,EAiClB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAjCkB,CAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAsEM,S;;;;;;;;;;AAOJ,qBAAY,CAAZ,EAAe,IAAf,EAAqB;AAAA;;AACnB,QAAM,OAAO,YAAY,CAAZ,CAAb;;AADmB,wFAGb,CAHa,EAGV,IAHU,EAGJ,IAHI;AAIpB;;;;;kBAGY,S","file":"m-sequence.js","sourcesContent":["import GaloisLFSR from './galois-lfsr'\n\n// @see http://www.newwaveinstruments.com/resources/articles/m_sequence_linear_feedback_shift_register_lfsr.htm\nconst taps_lookup = [\n  null,\n  [1],\n  [2, 1],\n  [3, 2],\n  [4, 3],\n  [5, 3],\n  [6, 5],\n  [7, 6],\n  [8, 7, 6, 1],\n  [9, 5],\n  [10, 7], // 10\n  [11, 9],\n  [12, 11, 10, 4],\n  [13, 12, 11, 8],\n  [14, 13, 12, 2],\n  [15, 14],\n  [16, 15, 13, 4],\n  [17, 14],\n  [18, 11],\n  [19, 18, 17, 14],\n  [20, 17], // 20\n  [21, 19],\n  [22, 21],\n  [23, 18],\n  [24, 23, 22, 17],\n  [25, 22],\n  [26, 25, 24, 20],\n  [27, 26, 25, 22],\n  [28, 25],\n  [29, 27],\n  [30, 29, 28, 7], // 30\n  [31, 28],\n  [32, 31, 30, 10]\n]\n\n/**\n * A Galois implementation of a linear feedback shift register (LFSR) that\n * places feedback taps so the LFSR will generate an m-sequence (maximal length\n * sequence).\n *\n * @class\n * @augments GaloisLFSR\n *\n * @example <caption>A 3-tap m-sequence</caption>\n *   var lfsr = new MSequence(3)\n *   console.log(lfsr.current_state, lfsr.current_state.toString(2))\n *   //=> 1, \"1\"\n *\n *   for (var n = 1; n <= lfsr.maximum_sequence_length; n++) {\n *     var bit = lfsr.next()\n *\n *     console.log(lfsr.current_state, bit.toString(2))\n *   }\n *   //=> 6, \"0\"\n *   //=> 3, \"1\"\n *   //=> 7, \"1\"\n *   //=> 5, \"1\"\n *   //=> 4, \"0\"\n *   //=> 2, \"0\"\n *   //=> 1, \"1\"\n *\n * @example <caption>Setting an integer seed</caption>\n *   var lfsr = new MSequence(3, 6)\n *   var state = lfsr.next() // 3\n *   //=> 0b011\n *\n * @see https://en.wikipedia.org/wiki/Maximum_length_sequence\n * @see http://www.newwaveinstruments.com/resources/articles/m_sequence_linear_feedback_shift_register_lfsr.htm\n */\nclass MSequence extends GaloisLFSR {\n  /**\n   * @param {number} m - Number of taps in the register.\n   * @param {(number|string)} [seed] - Starting value for the generator.\n   *\n   * @override\n   */\n  constructor(m, seed) {\n    const taps = taps_lookup[m]\n\n    super(m, taps, seed)\n  }\n}\n\nexport default MSequence\n"]}