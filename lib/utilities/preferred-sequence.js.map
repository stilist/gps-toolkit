{"version":3,"sources":["../../src/utilities/preferred-sequence.js"],"names":[],"mappings":";;;;;QAgBgB,yB,GAAA,yB;QAyBA,qB,GAAA,qB;;AAzChB;;;;;;;;;;;;;;;;AAgBO,SAAS,yBAAT,CAAmC,MAAnC,EAA2C;AAChD,MAAI,OAAO,MAAP,KAAkB,QAAtB,EAAgC,MAAM,IAAI,SAAJ,CAAc,yBAAd,CAAN;AAChC,MAAI,SAAS,CAAb,EAAgB,MAAM,IAAI,SAAJ,CAAc,qBAAd,CAAN;;AAEhB,MAAM,oBAAqB,SAAS,CAAV,KAAiB,CAAjB,GAAqB,CAArB,GAAyB,CAAnD;AACA,MAAM,IAAI,KAAK,GAAL,CAAS,CAAT,EAAY,CAAC,SAAS,iBAAV,IAA+B,CAA3C,IAAgD,CAA1D;;AAEA,SAAO,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,EAAS,IAAI,CAAb,CAAP;AACD;;;;;;;;;;;;;;;;;AAiBM,SAAS,qBAAT,CAA+B,YAA/B,EAA6C,MAA7C,EAAqD;AAC1D,MAAI,CAAC,aAAa,MAAlB,EAA0B,MAAM,IAAI,SAAJ,CAAc,+BAAd,CAAN;;AAE1B,MAAM,mBAAmB,0BAA0B,MAA1B,CAAzB;;AAEA,SAAO,aAAa,KAAb,CAAmB;AAAA,WAAS,iBAAiB,QAAjB,CAA0B,KAA1B,CAAT;AAAA,GAAnB,CAAP;AACD","file":"preferred-sequence.js","sourcesContent":["import 'babel-polyfill'\n\n/**\n * Get the ideal cross-correlation values for a sequence of the given `length`.\n *\n * @param {number} length - The length of the sequence.\n * @returns {number[]} The values for a preferred sequence of length `length`.\n *\n * @throws {TypeError}\n *\n * @example <caption>Values for length=5</caption>\n *   preferred_sequence_values(5)\n *   //=> [-1, -9, 7]\n *\n * @see http://www.wirelesscommunication.nl/reference/chaptr05/cdma/codes/gold.htm\n */\nexport function preferred_sequence_values(length) {\n  if (typeof length !== 'number') throw new TypeError('length must be a Number')\n  if (length < 3) throw new TypeError('length must be >= 3')\n\n  const length_adjustment = (length % 2) === 0 ? 2 : 1\n  const t = Math.pow(2, (length + length_adjustment) / 2) + 1\n\n  return [-1, -t, t - 2]\n}\n\n/**\n * Determine whether a set of correlations is a preferred sequence. (That is,\n * whether `correlations` only contains the values expected for a sequence of\n * the given length.)\n *\n * `length` is optional to save effort if you're passing in a complete\n * cross-correlation set.\n *\n * @param {number[]} correlations - The set of correlations.\n * @param {number} length - The length of the complete sequence.\n * @returns {boolean} Whether the set of correlations is limited to values from\n *   the preferred sequence.\n *\n * @throws {TypeError}\n */\nexport function is_preferred_sequence(correlations, length) {\n  if (!correlations.length) throw new TypeError('correlations must be an Array')\n\n  const preferred_values = preferred_sequence_values(length)\n\n  return correlations.every(value => preferred_values.includes(value))\n}\n"]}